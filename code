# С клавиатуры вводится два числа K и N.
# Квадратная матрица А(N,N), состоящая из 4-х равных по размерам подматриц, B,C,D,E заполняется случайным образом целыми числами в интервале [-10,10].
# Для тестирования использовать не случайное заполнение, а целенаправленное.

# Вариант 2
# Формируется матрица F следующим образом: если в С количество положительных элементов в четных столбцах в области 2 больше, чем количество отрицательных  элементов в нечетных столбцах в области 4, то поменять в С симметрично области 1 и 3 местами, иначе С и Е поменять местами несимметрично.
# При этом матрица А не меняется. После чего вычисляется выражение: (F+A)*AT – K * F.
# Выводятся по мере формирования А, F и все матричные операции последовательно.


import random

# Функция которая генерирует матрицу
def generate_matrix(n):
    return [[random.randint(-10, 10) for _ in range(n)] for _ in range(n)]

# Функция которая транспонирует матрицу
def transpose_matrix(matrix):
    return [[matrix[j][i] for j in range(len(matrix))] for i in range(len(matrix[0]))]

# Функция, которая меняет местами области 1 и 3 матрицы C
def swap(C):
    for i in range(len(C) // 2):
        for j in range(len(C[i]) // 2):
            C[i][j], C[i][j + len(C) // 2] = C[i][j + len(C) // 2], C[i][j]
            C[i + len(C) // 2][j], C[i + len(C) // 2][j + len(C) // 2] = C[i + len(C) // 2][j + len(C) // 2], \
            C[i + len(C) // 2][j]
    return C

def main():
    K = int(input("Введите K: "))
    N = int(input("Введите N: "))

    # Генерация матриц

    A = generate_matrix(N)
    B = [[1, 4], [2, 3]]
    C = [[1, 4], [2, 3]]
    D = [[1, 4], [2, 3]]
    E = [[1, 4], [2, 3]]

    # Вывод начальных матриц

    print("Матрица A:")
    for row in A:
        print(row)
    print("Матрица B:")
    for row in B:
        print(row)
    print("Матрица C:")
    for row in C:
        print(row)
    print("Матрица D:")
    for row in D:
        print(row)
    print("Матрица E:")
    for row in E:
        print(row)

    #Формируем матрицу F

    F = C

    # Проверка: если кол-во положительных элементов в четных столбцах области 2 > кол-ва отрицательных элементов в нечетных столбцах области 4 то меняем местами области 1 и 3 в матрице C

    if sum(C[i][j] > 0 for i in range(len(C)) for j in range(len(C[i]) // 2) if j % 2 == 0) > sum(
        C[i][j] < 0 for i in range(len(C)) for j in range(len(C[i]) // 2) if j % 2 != 0):
        F = swap(C)

    # Вычисление выражения (F+A)*AT – K * F

    AT = transpose_matrix(F)
    result_matrix = [[(F[i][j] + A[i][j]) * AT[i][j] - K * F[i][j] for j in range(len(F))] for i in range(len(F))]

    # Вывод результатов

    print("Матрица F:")
    for row in F:
        print(row)
    print("Результат выражения (F+A)*F – K * F:")
    for row in result_matrix:
        print(row)
main()
